---
TrainTestSplit:
  random_state: &seed 33
  test_size: 0.2
CrossValidation:
  cv: 5
  # It only accept 'Accuracy' or 'balanced_accuracy' for now. Other metrics can be added if needed.
  refit: 'balanced_accuracy'
  n_jobs: -1
  return_train_score: True
  verbose: 1
Models:
  LR_l1:
    module: sklearn.linear_model
    model: LogisticRegression
    shap_report: True
    shap_kernel: 'LinearExplainer'
    params:
      penalty: 'l1'
      random_state: *seed
      solver: 'liblinear'
      class_weight: 'balanced'
    cv:
      C: [0.0001, 0.001, 0.01, 0.1, 1, 10.0, 100.0, 1000.0, 10000.0]
  LR_l2:
    module: sklearn.linear_model
    model: LogisticRegression
    shap_report: True
    shap_kernel: 'LinearExplainer'
    params:
      penalty: 'l2'
      random_state: *seed
      n_jobs: -1
      solver: 'sag'
      class_weight: 'balanced'
    cv:
      C: [0.0001, 0.001, 0.01, 0.1, 1, 10.0, 100.0, 1000.0, 10000.0]
  SVM_l1:
    module: sklearn.svm
    model: LinearSVC
    shap_report: True
    shap_kernel: 'LinearExplainer'
    params:
      penalty: 'l1'
      dual: False
      random_state: *seed
      max_iter: 2000
      class_weight: 'balanced'
    cv:
      loss: ['squared_hinge']
      C: [0.01, 0.1, 1, 10.0, 100.0]
  SVM_l2:
    module: sklearn.svm
    model: LinearSVC
    shap_report: True
    shap_kernel: 'LinearExplainer'
    params:
      penalty: 'l2'
      random_state: *seed
      max_iter: 2000
      class_weight: 'balanced'
    cv:
      loss: ['squared_hinge','hinge']
      C: [0.01, 0.1, 1, 10.0, 100.0]
  RF:
    module: sklearn.ensemble
    model: RandomForestClassifier
    shap_report: True
    shap_kernel: 'TreeExplainer'
    params:
      random_state: *seed
      n_jobs: -1
      class_weight: 'balanced'
    cv:
      n_estimators: [100, 300, 500, 1000]
      max_depth: [5, 10, 15, 30]
      min_samples_split: [2, 5, 10, 15, 100]
      min_samples_leaf: [1, 2, 5, 10]
  INGOT:
    module: ingot
    model: INGOTClassifier
    params:
      false_positive_rate_upper_bound: 0.1
      max_rule_size: 20
      solver_name: 'CPLEX_PY'
      solver_options:
        timeLimit: 1800
    cv:
      lambda_p: [ 0.01, 0.1, 1, 10, 100 ]
      lambda_z: [ 0.01, 0.1, 1, 10, 100 ]